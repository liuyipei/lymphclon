
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "lymphclon"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('lymphclon')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("generate.clonal.data")
> ### * generate.clonal.data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: generate.clonal.data
> ### Title: generate.clonal.data (part of lymphclon package)
> ### Aliases: generate.clonal.data
> ### Keywords: ~kwd1 ~kwd2
> 
> ### ** Examples
> 
> my.data <- generate.clonal.data(n=2e3) 
> # n ~ 2e7 is more appropriate for a realistic B cell repertoire
> my.lymphclon.results <- infer.clonality(my.data$read.count.matrix)
Note: method with signature ‘symmetricMatrix#missing’ chosen for function ‘Schur’,
 target signature ‘dsyMatrix#missing’.
 "dsyMatrix#ANY" would also be valid
> # a consistently improved estimate of clonality (the squared 
> # 2-norm of the underlying multinomial distribution)
> 
> 
> 
> cleanEx()
> nameEx("infer.clonality")
> ### * infer.clonality
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: infer.clonality
> ### Title: infer.clonality (part of lymphclon package)
> ### Aliases: infer.clonality
> ### Keywords: ~kwd1 ~kwd2
> 
> ### ** Examples
> 
> my.data <- generate.clonal.data(n=2e3) 
> # n ~ 2e7 is more appropriate for a realistic B cell repertoire
> my.lymphclon.results <- infer.clonality(my.data$read.count.matrix)
> # a consistently improved estimate of clonality (the squared 
> # 2-norm of the underlying multinomial distribution)
> my.lymphclon.results$lymphclon.clonality 
          [,1]
[1,] 0.1156178
> 
> 
> 
> cleanEx()
> nameEx("lymphclon-package")
> ### * lymphclon-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lymphclon-package
> ### Title: Estimates the clonality score from replicate of abundances data
> ### Aliases: lymphclon-package lymphclon
> ### Keywords: diversity, clonality score, clonality
> 
> ### ** Examples
> 
> my.data <- generate.clonal.data(n=2e3) 
> # n ~ 2e7 is more appropriate for a realistic B cell repertoire
> my.lymphclon.results <- infer.clonality(my.data$read.count.matrix)
> # a consistently improved estimate of clonality (the squared 
> # 2-norm of the underlying multinomial distribution)
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  4.198 0.057 4.262 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
